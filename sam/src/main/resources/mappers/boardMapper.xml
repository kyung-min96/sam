<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mappers.board">

	<!-- 게시물 목록 -->
	<select id="list" resultType="com.board.domain.BoardVO">
		select bno, title, content, writer, regDate, viewCnt, viewLike, viewHate, replyCnt
		from tbl_board
		order by viewLike desc
	</select>
	
	<!-- 게시물 작성 -->
	<insert id="write" parameterType="com.board.domain.BoardVO">
		insert into tbl_board(title, content, writer)
		values(#{title}, #{content}, #{writer})
	</insert>
	
	<!-- 게시물 조회 -->
	<select id="view" parameterType="int" resultType="com.board.domain.BoardVO">
		select bno, title, content, writer, regDate, viewCnt, viewLike, viewHate, replyCnt
		from tbl_board
		where bno = #{bno}
	</select>
	
	<!-- 게시물 조회수 증가 -->
	<update id="updateReadCount">
		update tbl_board set 
			viewCnt = viewCnt + 1
		where bno = #{bno}	 
	</update>
	
	<!-- 게시물 수정 -->
	<update id="modify" parameterType="com.board.domain.BoardVO" >
		update tbl_board set
			title = #{title},
			content = #{content},
			writer = #{writer}
		where bno = #{bno}
	</update>
	
	<!-- 게시물 삭제 -->
	<update id="delete" parameterType="com.board.domain.BoardVO">
		update tbl_board set
			title = '삭제된 게시물입니다',
			content = '컨텐츠가 삭제되었습니다',
			writer = '비공개'
		where bno = #{bno}
	</update>
	
	<!-- 좋음 증가 -->
	<update id="like">
		update tbl_board set
			viewLike = viewLike + 1
		where bno = #{bno}
	</update>
	
	<!-- 싫음 증가 -->
	<update id="hate">
		update tbl_board set
			viewHate = viewHate + 1
		where bno = #{bno}
	</update>
	
	<!-- 댓글 수 증감 -->
	<update id="updateReplyCnt" parameterType="hashMap" >
		update tbl_board set 
			replyCnt = replyCnt + #{amount}
		where bno = #{bno}
	</update>
	
	<!-- 게시물 총 갯수 -->
	<select id="count" resultType="int">
		select count(bno) from tbl_board
	</select>
	
	<!-- 게시물 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap" resultType="com.board.domain.BoardVO">
		select bno, title, writer, regDate, viewCnt, viewLike, viewHate, replyCnt
		from tbl_board
		order by bno desc
		limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 게시물 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap" resultType="com.board.domain.BoardVO">
		select bno, title, writer, regDate, viewCnt, viewLike, viewHate, replyCnt
		from tbl_board
	 
		<if test='searchType.equals("title")'>
			where title like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			where content like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			where title like concat('%', #{keyword}, '%') 
			or content like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			where writer like concat('%', #{keyword}, '%')
		</if>
		 
		order by bno desc
		limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 검색 조건에 맞는 게시물 총 갯수 -->
	<select id="searchCount" parameterType="hashMap" resultType="int">
		select count(bno) from tbl_board
	 
		<if test='searchType.equals("title")'>
			where title like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("content")'>
			where content like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("title_content")'>
			where title like concat('%', #{keyword}, '%') 
			or content like concat('%', #{keyword}, '%')
		</if>
		 
		<if test='searchType.equals("writer")'>
			where writer like concat('%', #{keyword}, '%')
		</if>
	</select>
	
</mapper>




